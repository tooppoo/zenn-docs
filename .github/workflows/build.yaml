# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Build Pdf
on:
  push:
    tags:
      - "*/v*"
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    #  https://github.com/actions/cache/blob/main/examples.md#node---yarn:
    - name: Get yarn cache directory
      id: yarn-cache-dir
      run: echo "::set-output name=dir::$(yarn cache dir)"

    # https://github.com/actions/cache/blob/main/examples.md#node---lerna
    - name: Cache node_modules
      uses: actions/cache@v2
      env:
        cache-name: node-modules-cache
      with:
        path: |
          node_modules
          */*/node_modules
          ${{ steps.yarn-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: build pdf
      id: build
      run: |
        BOOK_VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g" | sed -e "s#/#_#")
        BOOK=$(echo $BOOK_VERSION | sed -e "s#_v.*##g")
        yarn build ./books/$BOOK ./build/books/$BOOK_VERSION.pdf
        echo ::set-output name=book::$BOOK
        echo ::set-output name=book_version::$BOOK_VERSION

    - name: archive pdf
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.build.outputs.book_version }}
        path: build/books/${{ steps.build.outputs.book_version }}.pdf

    - name: Send Review Target
      if: ${{ github.event_name == 'release' }}
      run: |
        cat << EOF >> .env
          NOTIFY_MAIL_ACCOUNT=${{ secrets.NOTIFY_MAIL_ACCOUNT }}
          NOTIFY_MAIL_PASSWORD=${{ secrets.NOTIFY_MAIL_PASSWORD }}
          NOTIFY_MAIL_SENDER=${{ secrets.NOTIFY_MAIL_SENDER }}
          NOTIFY_MAIL_TO=${{ secrets.NOTIFY_MAIL_TO }}
          NOTIFY_MAIL_CC=${{ secrets.NOTIFY_MAIL_CC }}
          NOTIFY_MAIL_BCC=${{ secrets.NOTIFY_MAIL_BCC }}
          NOTIFY_MAIL_SUBJECT=${{ secrets.NOTIFY_MAIL_SUBJECT }}
          NOTIFY_MAIL_TEXT=${{ secrets.NOTIFY_MAIL_TEXT }}
          NOTIFY_MAIL_FILES=build/books/${{ steps.build.outputs.book_version }}.pdf
        EOF
        yarn mail
